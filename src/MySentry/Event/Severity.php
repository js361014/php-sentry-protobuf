<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: Event.proto

namespace PhpSentryProtobuf\MySentry\Event;

use UnexpectedValueException;

/**
 * Protobuf type <code>PhpSentryProtobuf.MySentry.Event.Severity</code>
 */
class Severity
{
    /**
     * Generated from protobuf enum <code>debug = 0;</code>
     */
    const debug = 0;
    /**
     * Generated from protobuf enum <code>info = 1;</code>
     */
    const info = 1;
    /**
     * Generated from protobuf enum <code>warning = 2;</code>
     */
    const warning = 2;
    /**
     * Generated from protobuf enum <code>error = 3;</code>
     */
    const error = 3;
    /**
     * Generated from protobuf enum <code>fatal = 4;</code>
     */
    const fatal = 4;

    private static $valueToName = [
        self::debug => 'debug',
        self::info => 'info',
        self::warning => 'warning',
        self::error => 'error',
        self::fatal => 'fatal',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Severity::class, \PhpSentryProtobuf\MySentry\Event_Severity::class);

